<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CreateFeatureService</name>
    </assembly>
    <members>
        <member name="T:CreateFeatureService.Dockpane1View">
            <summary>
            Interaction logic for Dockpane1View.xaml
            </summary>
            <summary>
            Dockpane1View
            </summary>
        </member>
        <member name="M:CreateFeatureService.Dockpane1View.#ctor">
            <summary>
            Built-in method to initialize all components within this dockpane
            </summary>
        </member>
        <member name="M:CreateFeatureService.Dockpane1View.checkEmptyFields">
            <summary>
            Check if input fields are empty or invalid
            </summary>
            <returns></returns>
        </member>
        <member name="M:CreateFeatureService.Dockpane1View.OnClickClearContents(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Call back method to be called when "clearContents" button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CreateFeatureService.Dockpane1View.OnClickPublishSubmit(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Callback method to be called when the click event on the "publishSubmit" Button is triggered
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CreateFeatureService.Dockpane1View.getServiceName(System.String,System.String,System.String)">
            <summary>
            Gets the item title/name based on its item ID
            </summary>
            <param name="baseURI"></param>
            <param name="username"></param>
            <param name="itemId"></param>
            <returns></returns>
        </member>
        <member name="M:CreateFeatureService.Dockpane1View.isServiceNameAvailable(System.String,System.String,System.String)">
            <summary>
            Check if the service name is already in use
            </summary>
            <param name="baseURI"></param>
            <param name="serviceName"></param>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:CreateFeatureService.Dockpane1View.analyzeService(System.String,System.String,System.String,System.String)">
            <summary>
            Post "analyze" request on the portal item
            </summary>
            <param name="baseURI"></param>
            <param name="itemId"></param>
            <param name="filetype"></param>
            <param name="analyzeParameters"></param>
            <returns></returns>
        </member>
        <member name="M:CreateFeatureService.Dockpane1View.publishService(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Post "publish" request on the portal item
            </summary>
            <param name="baseURI"></param>
            <param name="username"></param>
            <param name="itemId"></param>
            <param name="filetype"></param>
            <param name="publishParameters"></param>
            <returns></returns>
        </member>
        <member name="M:CreateFeatureService.Dockpane1View.GetActivePortal_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Call back method to be called when "Get active portal" button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CreateFeatureService.Dockpane1View.pasteFromClipboard_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Call back method to be called when "paste to clip board" button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CreateFeatureService.Dockpane1View.copyToClipboard_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Call back method to be called when "copy to clip board" button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CreateFeatureService.Dockpane1View.SerializeToString(System.Object)">
            <summary>
            Print the deserialized object into JSON formatted string
            </summary>
            <param name="objectToSerialize"></param>
            <returns></returns>
        </member>
        <member name="M:CreateFeatureService.Dockpane1View.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CreateFeatureService.Dockpane1ViewModel">
            <summary>
            This sample provides a new tab and controls that allow you to create
             feature service from the csv file that has been uploaded to AGOL or
             portal.
            </summary>
        </member>
        <member name="M:CreateFeatureService.Dockpane1ViewModel.Show">
            <summary>
            Show the DockPane.
            </summary>
        </member>
        <member name="F:CreateFeatureService.Dockpane1ViewModel._heading">
            <summary>
            Text shown near the top of the DockPane.
            </summary>
        </member>
        <member name="T:CreateFeatureService.Dockpane1_ShowButton">
            <summary>
            Button implementation to show the DockPane.
            </summary>
        </member>
        <member name="T:CreateFeatureService.Module1">
            <summary>
            This sample provides a dockpane allowing to create a feature service from the csv file that has been uploaded to AGOL or portal.
            </summary>
            <remarks>
            1. In Visual Studio click the Build menu. Then select Build Solution.
            1. Click Start button to open ArcGIS Pro.
            1. ArcGIS Pro will open. 
            1. Open any project file. Click on the Add-in tab on the ribbon and then on the "Click to create service" button.
            ![UI](Screenshot/Screen1.png)  
            1. Fill in the required input fields and click the "Submit" button.
            </remarks>
        </member>
        <member name="P:CreateFeatureService.Module1.Current">
            <summary>
            Retrieve the singleton instance to this module here
            </summary>
        </member>
        <member name="M:CreateFeatureService.Module1.CanUnload">
            <summary>
            Called by Framework when ArcGIS Pro is closing
            </summary>
            <returns>False to prevent Pro from closing, otherwise True</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Tests.APIHelpers.SharingDataContracts.FeatureService">
            <summary>
            DataContract for JSON response of a feature service. Unnecessary elements are commented out.
            Uncomment them, add classes if necessary to make them usable.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Tests.APIHelpers.SharingDataContracts.Layer">
            <summary>
            Datacontract class to be used with FeatureServeice class, WebMapServiceInfo class
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Tests.APIHelpers.SharingDataContracts.FullExtent">
            <summary>
            Datacontract class to be used with FeatureServeice class
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Tests.APIHelpers.SharingDataContracts.InitialExtent">
            <summary>
            Datacontract class to be used with FeatureServeice class
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Tests.APIHelpers.SharingDataContracts.SpatialReference">
            <summary>
            Datacontract class to be used with FeatureServeice class
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Tests.APIHelpers.SharingDataContracts.MapService">
            <summary>
            DataContract for JSON response of a hosted map service. Unnecessary elements are commented out.
            Uncomment them, add classes if necessary to make them usable.
            Needs cleaning up
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Tests.APIHelpers.SharingDataContracts.SceneService">
            <summary>
            Data contract - for /serviceName/sceneServer/ resource
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Tests.APIHelpers.SharingDataContracts.WebSceneServiceLayer">
            <summary>
            A generic service layer in a WebScene
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Tests.APIHelpers.SharingDataContracts.ElevationLayer">
            <summary>
            Elevation layer within a basemap layer for a webscene
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Tests.APIHelpers.SharingDataContracts.WebSceneLayerInfo">
            <summary>
            Root class when deserializing webscene item's data REST endpoint.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Tests.APIHelpers.SharingDataContracts.WebMapLayerInfo">
            <summary>
            Root class when deserializing webmap item's data REST endpoint.
            This is the starting point.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Tests.APIHelpers.SharingDataContracts.WebMapServiceLayer">
            <summary>
            Spec for layers in a WebMap
            Complete WebMap Layer Spec. Up to date as of Nov 18 2014.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Tests.APIHelpers.SharingDataContracts.OnlineItem">
            <summary>
            DataContract to deserialize any online item. Can be used for packages, services, webmaps, webscenes etc.
            For webmaps, webscenes, to know the contents, use WebMapLayerInfo, WebSceneLayerInfo classes.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Tests.APIHelpers.SharingDataContracts.SearchGroupItem">
            <summary>
            SearchGroupItem contails all of UserGroups object and more KVPs
            </summary>
        </member>
    </members>
</doc>
