<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Licensing</name>
    </assembly>
    <members>
        <member name="T:Licensing.Module1">
             <summary>
             Show how to make a "Configurable Extension" that can be added to the Pro Backstage Licensing Tab
             </summary>
             <remarks>
             At 10.x, add-ins implemented the IExtensionConfig interface to create a "configurable extension". 
             A configurable extension in 10.x is listed on the ArcMap Extensions dialog box where users can toggle its enabled state on or off. Configurable extensions can execute their own proprietary licensing logic to determine their enabled state within their respective IExtensionConfig implementations.
            
             In ArcGIS Pro, the configurable extension mechanism is likewise supported. Add-ins that implement  the configurable extension pattern in Pro are shown on the licensing tab on the ArcGIS Pro application backstage in the list of "External Extensions".
            
             When a user attempts to enable a configurable extension from backstage, the 3rd party developer can execute custom licensing code via IExtensionConfig (same as at 10x) to determine whether or not the enabling action is authorized.
             
             This Add-in mimics implementation of a proprietary licensing scheme that is activated whenever the user attempts to enable the Add-in from the Pro Licensing tab. When the user clicks the "Enabled" check box (for the sample's external extension list entry on the licensing tab), a pop-up prompts the user for a valid Product ID to enable the extension. A valid Product ID will be any number that is divisible by 2. If a valid id is provided the extension is enabled. If a valid id is not provided then the Add-in remains disabled.  
             The extension state (Enabled, Disabled) is propagated to the UI and functionality of the Add-in (in this case a button that does a feature select) via a custom condition. The state that controls the condition is activated and deactivated in conjunction with the Enabled, Disabled extension state of the Add-in.
             
             ![UI](Screenshots/Screen1.png)
             
             Please also refer to the companion ProGuide at 
             <a href="https://github.com/Esri/arcgis-pro-sdk/wiki/ProGuide-License-Your-Add-in"/> for more information
             </remarks>
        </member>
        <member name="P:Licensing.Module1.Current">
            <summary>
            Retrieve the singleton instance to this module here
            </summary>
        </member>
        <member name="P:Licensing.Module1.AuthorizationID">
            <summary>
            The current Authorization ID
            </summary>
        </member>
        <member name="P:Licensing.Module1.Message">
            <summary>
            Implement to override the extensionConfig in the DAML
            </summary>
        </member>
        <member name="P:Licensing.Module1.ProductName">
            <summary>
            Implement to override the extensionConfig in the DAML
            </summary>
        </member>
        <member name="P:Licensing.Module1.State">
            <summary>
            Handle enable/disable request from the UI
            </summary>
        </member>
        <member name="M:Licensing.Module1.CheckLicensing(System.String)">
            <summary>
            Execute our authorization check
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Licensing.Module1.CanUnload">
            <summary>
            Called by Framework when ArcGIS Pro is closing
            </summary>
            <returns>False to prevent Pro from closing, otherwise True</returns>
        </member>
        <member name="T:Licensing.UI.RegistrationWindow">
            <summary>
            Interaction logic for RegistrationWindow.xaml
            </summary>
            <summary>
            RegistrationWindow
            </summary>
        </member>
        <member name="P:Licensing.UI.RegistrationWindow.AuthorizationID">
            <summary>
            The current Authorization ID being used to authorize the Add-in
            </summary>
        </member>
        <member name="P:Licensing.UI.RegistrationWindow.AuthorizeCommand">
            <summary>
            Execute the Authorization logic
            </summary>
        </member>
        <member name="M:Licensing.UI.RegistrationWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
    </members>
</doc>
